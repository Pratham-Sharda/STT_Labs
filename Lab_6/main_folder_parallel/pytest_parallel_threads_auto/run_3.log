============================= test session starts =============================
platform win32 -- Python 3.13.1, pytest-8.3.5, pluggy-1.5.0
rootdir: D:\Sem6\STT\Lab_6\algorithms
plugins: run-parallel-0.3.1, xdist-3.6.1
collected 412 items

tests\test_array.py ...........................                          [  6%]
tests\test_automata.py .                                                 [  6%]
tests\test_backtrack.py .........................                        [ 12%]
tests\test_bfs.py ...                                                    [ 13%]
tests\test_bit.py .............................                          [ 20%]
tests\test_compression.py F....                                          [ 21%]
tests\test_dfs.py ........                                               [ 23%]
tests\test_dp.py ...............................                         [ 31%]
tests\test_graph.py ....................                                 [ 36%]
tests\test_greedy.py .                                                   [ 36%]
tests\test_heap.py FF...                                                 [ 37%]
tests\test_histogram.py .                                                [ 37%]
tests\test_iterative_segment_tree.py .........                           [ 40%]
tests\test_linkedlist.py .F..........                                    [ 42%]
tests\test_map.py .........................                              [ 49%]
tests\test_maths.py ..................................................   [ 61%]
tests\test_matrix.py .............                                       [ 64%]
tests\test_ml.py ..                                                      [ 64%]
tests\test_monomial.py ........                                          [ 66%]
tests\test_polynomial.py .......                                         [ 68%]
tests\test_queues.py .....                                               [ 69%]
tests\test_search.py .............                                       [ 72%]
tests\test_set.py .                                                      [ 73%]
tests\test_sort.py ....................                                  [ 77%]
tests\test_stack.py ..........                                           [ 80%]
tests\test_streaming.py ....                                             [ 81%]
tests\test_strings.py .................................................. [ 93%]
..............                                                           [ 96%]
tests\test_tree.py ...........                                           [ 99%]
tests\test_unix.py ..                                                    [100%]

================================== FAILURES ===================================
____________________ TestHuffmanCoding.test_huffman_coding ____________________

self = <test_compression.TestHuffmanCoding testMethod=test_huffman_coding>

    def test_huffman_coding(self):
        HuffmanCoding.encode_file(self.file_in_name, self.file_out_bin_name)
        HuffmanCoding.decode_file(self.file_out_bin_name, self.file_out_name)
    
        with open(self.file_in_name, "rb") as file_1, open(self.file_out_name, "rb") as file_2:
            content_1 = file_1.read()
            content_2 = file_2.read()
    
>           self.assertEqual(content_1, content_2)
E           AssertionError: b'G\xf4\xb2\xda\x9c/4?\xf8\x8b\x17B\x98Z\xe[28793 chars]qE]?' != b''

tests\test_compression.py:30: AssertionError
---------------------------- Captured stdout call -----------------------------
File encoded.
File encoded.
File encoded.
File encoded.
File decoded.
File encoded.
File decoded.
File decoded.
File decoded.
File decoded.
File encoded.
File encoded.
File encoded.
File decoded.
File decoded.File decoded.

_________________________ TestBinaryHeap.test_insert __________________________

self = <test_heap.TestBinaryHeap testMethod=test_insert>

    def test_insert(self):
        # Before insert 2: [0, 4, 50, 7, 55, 90, 87]
        # After insert:  [0, 2, 50, 4, 55, 90, 87, 7]
        self.min_heap.insert(2)
>       self.assertEqual([0, 2, 50, 4, 55, 90, 87, 7],
                         self.min_heap.heap)
E       AssertionError: Lists differ: [0, 2, 50, 4, 55, 90, 87, 7] != [0, 2, 2, 4, 50, 90, 87, 7, 55]
E       
E       First differing element 2:
E       50
E       2
E       
E       Second list contains 1 additional elements.
E       First extra element 8:
E       55
E       
E       - [0, 2, 50, 4, 55, 90, 87, 7]
E       + [0, 2, 2, 4, 50, 90, 87, 7, 55]

tests\test_heap.py:29: AssertionError
_______________________ TestBinaryHeap.test_remove_min ________________________

self = <test_heap.TestBinaryHeap testMethod=test_remove_min>

    def test_remove_min(self):
        ret = self.min_heap.remove_min()
        # Before remove_min : [0, 4, 50, 7, 55, 90, 87]
        # After remove_min: [7, 50, 87, 55, 90]
        # Test return value
>       self.assertEqual(4, ret)
E       AssertionError: 4 != 7

tests\test_heap.py:38: AssertionError
________________________ TestSuite.test_is_palindrome _________________________

self = <test_linkedlist.TestSuite testMethod=test_is_palindrome>

    def test_is_palindrome(self):
>       self.assertTrue(is_palindrome(self.l))
E       AssertionError: False is not true

tests\test_linkedlist.py:167: AssertionError
=========================== short test summary info ===========================
FAILED tests/test_compression.py::TestHuffmanCoding::test_huffman_coding - As...
FAILED tests/test_heap.py::TestBinaryHeap::test_insert - AssertionError: List...
FAILED tests/test_heap.py::TestBinaryHeap::test_remove_min - AssertionError: ...
FAILED tests/test_linkedlist.py::TestSuite::test_is_palindrome - AssertionErr...
======================= 4 failed, 408 passed in 33.85s ========================
